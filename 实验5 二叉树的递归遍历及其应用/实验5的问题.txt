scanf和getchar()的区别
scanf分为整型，字节型，字符串
当为整型时:
int a;
scanf("%d",&a);
printf("%d",a);
此时输入数值就会输出整型数值；输入字符只会输出1。
这时你输入Tab键，空格键，回车键，都不会停止，直到键入数值或者字符再输入回车才会结束。


当为字节型时:
char a;
scanf("%c",&a);
printf("%c",a);
此时输入数值字数超过一位时，只会取第一位；输入字符超过一位时，只会取第一位。
这时你输入Tab键，空格键都不会停止，当直接键入回车或者键入数值或字符再输入回车才会结束。

char a;
scanf("%c",&a);
printf("%d",a);
此时无论输入数字还是字符都只能得到它的ASCII值，例如a=97，1=49，Tab=9，空格=32，回车=10


当为字符串型时，由于C里没有string，只能用char数组代替
char a[10];
scanf("%s",a);		//注意这里没有&
printf("%s",a);
此时只能在里面输入字符串或者数字
这时你直接输入Tab键，空格键，回车键，都不会停止，直到键入数值或者字符串再输入回车才会结束。


总结:这里scanf("%d",&a)-->printf("%d",a)在整型时输入流会直接忽略掉Tab，空格，回车(例如输入1 2，输出12;1回车2，输出12)
整型时scanf只会取键盘的数字或除了Tab键，空格键，回车键的字符,只有再输入数据时在输入回车才会结束。
while(输入流只有Tab键，空格键，回车键)
{
  继续输入；
}
while(输入流末位不存在回车)
{
  继续输入；
}
for(输入流从首位到末位)
{
 if(字符为Tab键，空格键，回车键)
 continue;
 else
 持续输出；
}


scanf("%c",&a)-->printf("%c",a)在字符型时不会忽略掉任何字符，输入回车结束。
while(输入流末位不存在回车)
{
  继续输入；
}
for(输入流从首位到末位)
{
 无论什么都输出；
}


scanf("%s",a)-->printf("%s",a)在字符串里当输入流里有Tab，空格，回车会直接结束
while(输入流只有Tab键，空格键，回车键)
{
  继续输入；
}
while(输入流末位不存在回车)
{
  继续输入；
}
while(输入流末位不存在回车)
{
  继续输入；
}
for(输入流从首位到末位)
{
 if(字符为Tab键，空格键，回车键)
 break;
 else
 持续输出；
}

思想:根据具体情况考虑输入流与输出流
%d，%f的话，读取缓冲区 直到 非数字，但是不会清除(输入流)后面的这些字符 	
例如: 输入:123+-*/,输出:123	输入流:123+-*/'\n' 输出流:123+-*/
%s 的话，读取缓冲区直到 空格回车等空白字符，同时会把这个(输入流)空白字符清除	
例如: 输入:hellow world,输出:hellow	输入流:hellow world'\n' 输出流:hellow


getchar用法:
a=getchar();		//将取来的字符赋给a
getchar();		//直接在输入流里取走一个字符

#include <stdio.h>
int main()
{
    char a,b;
    scanf("%c",&a);
    getchar();
    printf("%cn",a);
    scanf("%c",&b);
    getchar();
    printf("%c",b);
}

输入：cba
输出：ca
